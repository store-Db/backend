name: Java CI with Maven and Docker
 
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04

    services:
      postgres:  
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Wait for PostgreSQL to be ready
        run: sleep 30

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/test
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: root
      
      - name: Install SonarQube scanner
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-4.6.2.2472-linux /opt/sonar-scanner
          sudo ln -s /opt/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner
          export PATH=$PATH:/opt/sonar-scanner/bin

      - name: Run SonarCloud analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=store-db \
            -Dsonar.sources=. \
            -Dsonar.host.url=${{ secrets.SONARQUBE_URL }} \
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and tag Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/docker-spring-boot-postgres:${{ github.sha }} .
        env:
          COMMIT_SHA: ${{ github.sha }}
            
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
      
      - name: Scan Docker image and generate JSON report
        run: |
          trivy image --format json --output trivy-report.json --severity HIGH,CRITICAL ${{ secrets.DOCKER_HUB_USERNAME }}/docker-spring-boot-postgres:${{ github.sha }}
          
      - name: Push Trivy report to another repository
        run: |
          git clone https://github.com/store-Db/trivy-report.git
          cd trivy-report
          mv ../trivy-report.json ./trivy-report-${{ github.sha }}.json
          git config --global user.email "bentarjem.sara@esprit.tn"
          git config --global user.name "sara-8"
          git add .
          git commit -m "Add Trivy scan report for commit ${{ github.sha }}"
          git push https://store-Db:${{ secrets.PAT_GITHUB }}@github.com/store-Db/trivy-report.git HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_SHA: ${{ github.sha }}

          
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/docker-spring-boot-postgres:${{ github.sha }}
        env:
          COMMIT_SHA: ${{ github.sha }}
          
      - name: Checkout manifests repository
        uses: actions/checkout@v2
        with:
          repository: store-Db/manifest
          path: manifests
          token: ${{ secrets.PAT_GITHUB }}

      - name: Update manifest
        run: |
          sed -i 's#image: .*$#image: '"${{ secrets.DOCKER_HUB_USERNAME }}/docker-spring-boot-postgres:${{ github.sha }}"'#g' manifests/work/back.yaml
        env:
          COMMIT_SHA: ${{ github.sha }}
          
      - name: Commit and push changes
        run: |
          cd manifests
          git config --global user.email "bentarjem.sara@esprit.tn"
          git config --global user.name "sara-8"
          git add .
          git commit -m "Update Spring Boot app image to $COMMIT_SHA"
          git push https://store-Db:${{ secrets.PAT_GITHUB }}@github.com/store-Db/manifest.git HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}
          COMMIT_SHA: ${{ github.sha }}
